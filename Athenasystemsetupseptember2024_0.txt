Setup Athena


adding user to sudoers
$ sudo usermod -a -G sudo <username>

Download Anaconda
Install Anaconda
    https://docs.anaconda.com/free/anaconda/install/index.html
    https://www.anaconda.com/download/#linux
    linux :
        https://docs.anaconda.com/free/anaconda/install/linux/
        bash ./Anaconda3-2023.03-1-Linux-x86_64.sh

Create conda environment
    conda create --name athena7 python=3.7 pandas

Use an environment
    conda activate athena5
    conda install matplotlib
    conda install -c conda-forge libstdcxx-ng
    pip install ccxt
    pip install bta-lib
    pip install mplfinance

Export an environment
    conda env export > environment.yml

Create conda environment from an exported environment yml file
    conda env create -f  athena7_may0423_environment.yml
    conda env create -f  Downloads/athena7_may0423_environment.yml

Install git / git client
    git cola
    git dag

Configure git for user
    https://docs.github.com/en/get-started/getting-started-with-git/setting-your-username-in-git
    https://docs.github.com/en/get-started/quickstart/github-flow
    git config --global user.email "no-reply"


    error  when running git without configuring first.
        *** Please tell me who you are.

        Run

          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

        to set your account's default identity.+

        Ommit --global to set the identity only in this repository.

        fatal: unable to auto-detect email address (got 'panal@optimus.(none)')

Download git credential manager
    https://docs.github.com/en/get-started/getting-started-with-git/caching-your-github-credentials-in-git
    https://github.com/microsoft/Git-Credential-Manager-Core
    https://github.com/git-ecosystem/git-credential-manager/blob/release/docs/install.md

Install git credential manager
    sudo dpkg -i gcm-linux_amd64.2.1.2.deb

Configure git credential manager
    #https://github.com/git-ecosystem/git-credential-manager/blob/main/docs/credstores.md
    #git-credential-manager-core configure
    
    $ git-credential-manager configure
        output : 
                Configuring component 'Git Credential Manager'...
                Configuring component 'Azure Repos provider'...


Configure git to use git credential manage
    git config --global credential.credentialStore cache
    git config --global credential.cacheOptions "--timeout 600"


Clone repository from git repository

…or create a new repository on the command line
echo "# ssetups" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M master
git remote add origin https://github.com/loganx7/ssetups.git
git push -u origin master

…or push an existing repository from the command line
git remote add origin https://github.com/loganx7/ssetups.git
git branch -M master
git push -u origin master








********************************************************************************************
Installing Anaconda on Linux
Note

Using Anaconda in a commercial setting? You may need to purchase a license to stay compliant with our Terms of Service. This can be accomplished through several of Anaconda’s tiers: Pro, Business (On-prem), Business (Cloud), or Enterprise. If you have already purchased Professional, please proceed to the “Authenticating to Anaconda” section of the appropriate Pro tier quickstart for your operating system and installation method.

Visit https://anaconda.cloud/pricing to compare tier capabilities and pricing.

On this page:

Prerequisites
Installation
Problems?
What’s next?
Prerequisites
To use GUI packages with Linux, you will need to install the following extended dependencies for Qt:

Debian  apt-get install libgl1-mesa-glx libegl1-mesa libxrandr2 libxrandr2 libxss1 libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6
RedHat  yum install libXcomposite libXcursor libXi libXtst libXrandr alsa-lib mesa-libEGL libXdamage mesa-libGL libXScrnSaver
ArchLinux   pacman -Sy libxau libxi libxss libxtst libxcursor libxcomposite libxdamage libxfixes libxrandr libxrender mesa-libgl  alsa-lib libglvnd
OpenSuse/SLES   zypper install libXcomposite1 libXi6 libXext6 libXau6 libX11-6 libXrandr2 libXrender1 libXss1 libXtst6 libXdamage1 libXcursor1 libxcb1 libasound2  libX11-xcb1 Mesa-libGL1 Mesa-libEGL1
Gentoo  emerge x11-libs/libXau x11-libs/libxcb x11-libs/libX11 x11-libs/libXext x11-libs/libXfixes x11-libs/libXrender x11-libs/libXi x11-libs/libXcomposite x11-libs/libXrandr x11-libs/libXcursor x11-libs/libXdamage x11-libs/libXScrnSaver x11-libs/libXtst media-libs/alsa-lib media-libs/mesa
Installation
For x86 systems.

In your browser, download the Anaconda installer for Linux.

Search for “terminal” in your applications and click to open.

(Recommended) Verify the installer’s data integrity with SHA-256. For more information on hash verification, see cryptographic hash validation.

In the terminal, run the following:

shasum -a 256 /PATH/FILENAME
# Replace /PATH/FILENAME with your installation's path and filename.
Install for Python 3.7 or 2.7 in the terminal:

For Python 3.7, enter the following:

# Include the bash command regardless of whether or not you are using the Bash shell
bash ~/Downloads/Anaconda3-2020.05-Linux-x86_64.sh
# Replace ~/Downloads with your actual path
# Replace the .sh file name with the name of the file you downloaded
For Python 2.7, enter the following:

# Include the bash command regardless of whether or not you are using the Bash shell
bash ~/Downloads/Anaconda2-2019.10-MacOSX-x86_64.sh
# Replace ~/Downloads with your actual path
# Replace the .sh file name with the name of the file you downloaded
Press Enter to review the license agreement. Then press and hold Enter to scroll.

Enter “yes” to agree to the license agreement.

Use Enter to accept the default install location, use CTRL+C to cancel the installation, or enter another file path to specify an alternate installation directory. If you accept the default install location, the installer displays PREFIX=/home/<USER>/anaconda<2/3> and continues the installation. It may take a few minutes to complete.

Note

Anaconda recommends you accept the default install location. Do not choose the path as /usr for the Anaconda/Miniconda installation.

Anaconda recommends you enter “yes” to initialize Anaconda Distribution by running conda init.

If you enter “no”, then conda will not modify your shell scripts at all. In order to initialize conda after the installation process is done, run the following commands:

# Replace <PATH_TO_CONDA> with the path to your conda install
source <PATH_TO_CONDA>/bin/activate
conda init
For more information, see the FAQ.

The installer finishes and displays, “Thank you for installing Anaconda<2/3>!”

Close and re-open your terminal window for the installation to take effect, or enter the command source ~/.bashrc to refresh the terminal.

You can also control whether or not your shell has the base environment activated each time it opens.

# The base environment is activated by default
conda config --set auto_activate_base True

# The base environment is not activated by default
conda config --set auto_activate_base False

# The above commands only work if conda init has been run first
# conda init is available in conda versions 4.6.12 and later
Verify your installation.

Note

If you install multiple versions of Anaconda, the system defaults to the most current version, as long as you haven’t altered the default install path.

